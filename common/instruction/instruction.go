package instruction

type Type = uint8

const (
	INST_BRK_IMPL Type = iota
	INST_NOP_IMPL
	INST_JMP_IMM16
	INST_JS_IMM16
	INST_JNS_IMM16
	INST_JZ_IMM
	INST_JNZ_IMM16
	INST_JC_IMM16
	INST_CMP_REG8_REG8
	INST_CMP_REG8_IMM8
	INST_ADD_REG8_REG8
	INST_ADD_REG8_IMM8
	INST_ADD_SP_IMM8
	INST_ADD_REG16_IMM8
	INST_ADC_REG8_REG8
	INST_ADC_REG8_IMM8
	INST_SUB_REG8_REG8
	INST_SUB_REG8_IMM8
	INST_SUB_SP_IMM8
	INST_SUB_REG16_IMM8
	INST_SBB_REG8_REG8
	INST_SBB_REG8_IMM8
	INST_INC_REG8
	INST_INC_REG16
	INST_DEC_REG8
	INST_DEC_REG16
	INST_MOV_REG8_REG8
	INST_MOV_REG8_IMM8
	INST_MOV_DIRECT_REG8
	INST_MOV_REG8_DIRECT
	INST_MOV_MEM_REG8_OFFSET
	INST_MOV_REG8_MEM_OFFSET
	INST_MOV_MEM_INDEXED_REG  // not implemented yet
	INST_MOV_REG8_MEM_INDEXED // not implemented yet
	INST_MOV_REG8_IMM16
	INST_MOV_REG16_REG16
	INST_MOV_REG16_SP
	INST_MOV_SP_REG16
	INST_MOV_REG8_INDIRECT
	INST_MOV_INDIRECT_REG8
	INST_MOV_REG8_INDIRECT_OFFSET
	INST_MOV_INDIRECT_OFFSET_REG8
	INST_MOV_REG8_INDEXED
	INST_MOV_INDEXED_REG8
	INST_XOR_REG8_REG8
	INST_XOR_REG8_IMM8
	INST_AND_REG8_REG8
	INST_AND_REG8_IMM8
	INST_OR_REG8_REG8
	INST_OR_REG8_IMM8
	INST_NOT_REG8
	INST_SHL_REG8
	INST_SHR_REG8
	INST_ROL_REG8
	INST_ROR_REG8
	INST_CLC_IMPL
	INST_PUSH_SP
	INST_PUSH_REG8
	INST_PUSH_REG16
	INST_POP_SP
	INST_POP_REG8
	INST_POP_REG16
	INST_CALL_IMPL
	INST_RET_IMPL
)

const (
	INST_MNEMONICS_BRK  string = "brk"
	INST_MNEMONICS_MOV  string = "mov"
	INST_MNEMONICS_ADD  string = "add"
	INST_MNEMONICS_ADC  string = "adc"
	INST_MNEMONICS_SUB  string = "sub"
	INST_MNEMONICS_SBB  string = "sbb"
	INST_MNEMONICS_XOR  string = "xor"
	INST_MNEMONICS_AND  string = "and"
	INST_MNEMONICS_OR   string = "or"
	INST_MNEMONICS_NOT  string = "not"
	INST_MNEMONICS_SHL  string = "shl"
	INST_MNEMONICS_SHR  string = "shr"
	INST_MNEMONICS_ROL  string = "rol"
	INST_MNEMONICS_ROR  string = "ror"
	INST_MNEMONICS_CMP  string = "cmp"
	INST_MNEMONICS_JMP  string = "jmp"
	INST_MNEMONICS_JZ   string = "jz"
	INST_MNEMONICS_JNZ  string = "jnz"
	INST_MNEMONICS_JC   string = "jc"
	INST_MNEMONICS_JS   string = "js"
	INST_MNEMONICS_JNS  string = "jns"
	INST_MNEMONICS_CLC  string = "clc"
	INST_MNEMONICS_PUSH string = "push"
	INST_MNEMONICS_POP  string = "pop"
	INST_MNEMONICS_INC  string = "inc"
	INST_MNEMONICS_DEC  string = "dec"
	INST_MNEMONICS_CALL string = "call"
	INST_MNEMONICS_RET  string = "ret"
	INST_MNEMONICS_NOP  string = "nop"
)

var (
	INST_HUMAN_READABLE = map[uint8]string{
		0x00: "BRK_IMPL",
	}
)
