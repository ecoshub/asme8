package instruction

const (
	REGISTER_SYMBOL_A   string = "a"
	REGISTER_SYMBOL_B   string = "b"
	REGISTER_SYMBOL_C   string = "c"
	REGISTER_SYMBOL_D   string = "d"
	REGISTER_SYMBOL_E   string = "e"
	REGISTER_SYMBOL_IPH string = "iph"
	REGISTER_SYMBOL_IPL string = "ipl"
	REGISTER_SYMBOL_BPH string = "bph"
	REGISTER_SYMBOL_BPL string = "bpl"
	REGISTER_SYMBOL_IP  string = "ip"
	REGISTER_SYMBOL_BP  string = "bp"
)

const (
	REGISTER_OPCODE_A   uint8 = 0b0000
	REGISTER_OPCODE_B   uint8 = 0b0001
	REGISTER_OPCODE_C   uint8 = 0b0010
	REGISTER_OPCODE_D   uint8 = 0b0011
	REGISTER_OPCODE_E   uint8 = 0b0100
	REGISTER_OPCODE_IP  uint8 = 0b1000
	REGISTER_OPCODE_IPL uint8 = 0b1001
	REGISTER_OPCODE_IPH uint8 = 0b1010
	REGISTER_OPCODE_BP  uint8 = 0b1100
	REGISTER_OPCODE_BPL uint8 = 0b1101
	REGISTER_OPCODE_BPH uint8 = 0b1110
)

var (
	REGISTER_SYMBOL_TO_OPCODE = map[string]uint8{
		REGISTER_SYMBOL_A:   REGISTER_OPCODE_A,
		REGISTER_SYMBOL_B:   REGISTER_OPCODE_B,
		REGISTER_SYMBOL_C:   REGISTER_OPCODE_C,
		REGISTER_SYMBOL_D:   REGISTER_OPCODE_D,
		REGISTER_SYMBOL_E:   REGISTER_OPCODE_E,
		REGISTER_SYMBOL_IPH: REGISTER_OPCODE_IPH,
		REGISTER_SYMBOL_IPL: REGISTER_OPCODE_IPL,
		REGISTER_SYMBOL_BPH: REGISTER_OPCODE_BPH,
		REGISTER_SYMBOL_BPL: REGISTER_OPCODE_BPL,
		REGISTER_SYMBOL_IP:  REGISTER_OPCODE_IP,
		REGISTER_SYMBOL_BP:  REGISTER_OPCODE_BP,
	}
)
